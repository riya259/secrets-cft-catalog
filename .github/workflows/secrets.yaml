# Define the name of the GitHub Action workflow
name: Manage AWS Secrets using CloudFormation

# This workflow is manually triggered using the GitHub Actions UI
on:
  workflow_dispatch:
    # Define inputs that are required for the manual trigger
    inputs:
      SecretName:
        description: 'Name of the AWS Secret'
        required: true
      SecretValue:
        description: 'Value of the AWS Secret (required for creation)'
        required: false
      action:
        description: 'Action to perform (create/delete)'
        required: true
      StackName:
        description: 'Name of the CloudFormation stack'
        required: true
        type: string

# Jobs to be executed in this workflow
jobs:
  # Job for creating the secret
  create_secret:
    # Use the latest Ubuntu runner
    runs-on: ubuntu-latest

    # Execute this step only if the action input is "create"
    if: ${{ github.event.inputs.action == 'create' }}

    steps:
      # Checkout the code from the repository
      - name: Checkout code
        uses: actions/checkout@v2

      # Configure AWS credentials. Ensure these values are stored in GitHub secrets
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      # Validate CloudFormation template
      - name: Validate CloudFormation template
        run: |
          aws cloudformation validate-template --template-body file://../cft.json

      # Create the secret using CloudFormation
      - name: Create AWS Secret
        run: |
          aws cloudformation create-stack \
            --stack-name ${{ github.event.inputs.StackName }} \
            --template-body file://../cft.json \
            --parameters ParameterKey=SecretName,ParameterValue=${{ github.event.inputs.SecretName }} \
                         ParameterKey=SecretValue,ParameterValue=${{ github.event.inputs.SecretValue }} \
            --capabilities CAPABILITY_NAMED_IAM

  # Job for destroying the secret
  destroy_secret:
    # Use the latest Ubuntu runner
    runs-on: ubuntu-latest

    # Execute this step only if the action input is "delete"
    if: ${{ github.event.inputs.action == 'delete' }}

    steps:
      # Checkout the code from the repository
      - name: Checkout code
        uses: actions/checkout@v2

      # Configure AWS credentials. Ensure these values are stored in GitHub secrets
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      # Delete the CloudFormation stack, which will delete the secret
      - name: Delete AWS Secret
        run: |
          aws cloudformation delete-stack --stack-name ${{ github.event.inputs.StackName }}
